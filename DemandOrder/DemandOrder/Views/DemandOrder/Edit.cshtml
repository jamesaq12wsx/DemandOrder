@model DemandOrder.Models.OrderViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>@Model.OrderID</h1>

<h2>@Model.OrderName</h2>

<h3>Edit</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        <div class="col-md-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.OrderID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrderID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.OrderID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ApplyDept, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ApplyDept, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.ApplyDept, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ApplySec, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ApplySec, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.ApplySec, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Applicant, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Applicant, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.Applicant, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrderName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrderName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.OrderName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ITDept, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ITDept, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.ITDept, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExpectCompleteDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExpectCompleteDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.ExpectCompleteDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExpectRecieveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExpectRecieveDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.ExpectRecieveDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExpectStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExpectStartDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.ExpectStartDate, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="col-md-6">

            <div class="form-group">
                @Html.LabelFor(model => model.ExpectFinishDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExpectFinishDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.ExpectFinishDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AcceptionTestStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AcceptionTestStartDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.AcceptionTestStartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AcceptionTestFinishDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AcceptionTestFinishDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.AcceptionTestFinishDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CaseCloseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CaseCloseDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.CaseCloseDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaintainLine, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaintainLine, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.MaintainLine, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaintainITDept, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaintainITDept, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.MaintainITDept, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaintainITSec, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaintainITSec, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.MaintainITSec, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DemandDutyPerson, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DemandDutyPerson, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.DemandDutyPerson, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ClassNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClassNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.ClassNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClassName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:gray; color:white" } })
                    @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <br />

        <div class="form-group">
            <div class="col-md-offset-1 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
